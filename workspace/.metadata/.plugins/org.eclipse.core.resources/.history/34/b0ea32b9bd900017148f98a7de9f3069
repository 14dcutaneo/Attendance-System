
public abstract class Types 
{
	enum it {Input, Output, And};
	protected final static int INPUTS_ONE = 1, INPUTS_TWO = 2, INPUTS_THREE = 3, OUTPUTS_ONE = 1, OUTPUTS_TWO = 2, OUTPUTS_THREE = 3;
	public abstract class CurcuitObj
	{
		Types.Input[] input;
		Types.Output[] output;
		Types.it Type;
		String Name;
		public CurcuitObj(int INPUTCOUNT, int OUTPUTCOUNT, Types.it t, String nombre)
		{
			Name = nombre;
			Type = t;
			input = new Input[INPUTCOUNT];
			output = new Output[OUTPUTCOUNT];
		}
		public Types.CurcuitObj[][] returnConnections()
		{
			int len = 1;
			if (output.length > input.length)
				len = output.length;
			else
				len = input.length;
			Types.CurcuitObj[][] ct = new Types.CurcuitObj[2][len];
			for (int i = 0; i < input.length; i++)
				ct[0][i] = input[i].Parent;
			for (int i = 0; i < output.length; i++)
				ct[0][i] = output[i].Parent;
			
			return ct;
		}
		//public abstract void calculateOutput();
	}
	public abstract class Input
	{
		protected Types.CurcuitObj Parent;
		protected Types.Output connection;
		public Input(Types.CurcuitObj cd)
		{
			Parent = cd;
		}
	}
	public abstract class Output
	{
		protected Types.CurcuitObj Parent;
		protected Types.Input[] connection;
		protected boolean Value;
		public Output(Types.CurcuitObj cd)
		{
			Value = false;
			Parent = cd;
		}
		public void setValue(boolean v)
		{
			Value = v;
		}
	}
}
